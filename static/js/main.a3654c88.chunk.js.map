{"version":3,"sources":["components/reducers.js","components/context.js","components/AutoComplete.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","pokemonPack","resultsPokemons","error","totalResults","reducer","prevState","action","type","payload","filter","name","length","getPokemon","id","ResultContext","React","createContext","AutoCompleteContext","ResultProvider","Provider","AutoCompleteProvider","AutoComplete","context","useContext","Autocomplete","value","onChange","event","newValue","setValue","options","renderInput","params","ref","InputProps","style","width","inputProps","Results","className","onDragOver","dragOver","onSubmit","addPokemon","map","pokemon","transform","number","draggable","onDragEnd","dropCard","onClick","dispatch","src","imageUrl","alt","App","useReducer","state","useState","pokemonValue","picture","useEffect","axios","get","then","response","data","catch","console","log","e","preventDefault","target","left","pageX","top","pageY","stopPropagation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAAaA,EAAe,CAC1BC,YAAc,GACdC,gBAAiB,GACjBC,MAAO,GACPC,aAAc,GAIT,SAASC,EAAQC,EAAUC,GAC/B,OAAOA,EAAOC,MACZ,IAAK,gBACF,MAAM,CACJP,YAAYM,EAAOE,QACnBP,gBAAiB,GACjBC,MAAO,GACPC,aAAc,GAElB,IAAK,cACF,MAAM,CACLH,YAAY,GACXC,gBAAiB,GACjBC,MAAO,wBAEZ,IAAK,cACF,kCACKG,GADL,IAECL,YAAaK,EAAUL,YAAYS,QAAO,SAAAT,GAAW,OAAIA,EAAYU,OAASJ,EAAOE,QAAQ,GAAGE,QAChGT,gBAAgB,GAAD,mBAAKI,EAAUJ,iBAAf,CAA+BK,EAAOE,QAAQ,KAC7DN,MAAO,eACPC,aAAcE,EAAUJ,gBAAgBU,OAAS,IAErD,IAAK,iBACH,OAAO,2BACFN,GADL,IAEEL,YAAY,GAAD,mBAAMK,EAAUL,aAAhB,CAA6BM,EAAOE,UAC/CP,gBAAiBI,EAAUJ,gBAAgBQ,QAAO,SAAAG,GAAU,OAAIA,EAAWC,KAAOP,EAAOE,QAAQK,MACjGV,aAAcE,EAAUJ,gBAAgBU,OAAS,IAEnD,QACA,OAAON,GCrCR,IAAMS,EAAiBC,IAAMC,gBACvBC,EAAsBF,IAAMC,gBAE5BE,EAAiBJ,EAAcK,SAC/BC,EAAsBH,EAAoBE,S,eCDxC,SAASE,IACpB,IAAMC,EAAUC,qBAAWN,GAC3B,OACE,cAACO,EAAA,EAAD,CACAC,MAAOH,EAAQG,OAAS,GACxBC,SAAU,SAACC,EAAOC,GAChBN,EAAQO,SAASD,IAEnBf,GAAG,oBACHiB,QAASR,EAAQQ,QACjBC,YAAa,SAACC,GAAD,OACX,qBAAKC,IAAKD,EAAOE,WAAWD,IAA5B,SACE,mCAAOE,MAAO,CAAEC,MAAO,KAAO7B,KAAK,QAAWyB,EAAOK,kBC2BhDC,MAxCf,WACA,IAAMhB,EAAUC,qBAAWT,GAG3B,OACA,sBAAKyB,UAAU,KAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAW,iBAAhB,SACE,qBAAKA,UAAW,kCAGtB,sBAAKA,UAAU,OAAOC,WAAYlB,EAAQmB,SAA1C,UACI,gDAAmBnB,EAAQnB,aAA3B,OACA,uBACIoC,UAAU,aACVG,SAAWpB,EAAQqB,WAFvB,UAII,cAACtB,EAAD,IACA,wBAASc,MAAO,CAACC,MAAO,KAAxB,oBAEHd,EAAQrB,gBAAgB2C,KAAI,SAAAC,GAAO,OAChC,sBAAuBN,UAAU,cAC5BJ,MAAO,CAACW,UAAU,UAAD,OAAYD,EAAQE,OAApB,SACjBC,UAAU,OACVC,UAAW3B,EAAQ4B,SAHxB,UAKI,qBAAKX,UAAU,oBAAf,SACI,qBAAKA,UAAU,QAAQY,QAAS,kBAAK7B,EAAQ8B,SAAS,CAAC7C,KAAK,iBAAiBC,QAAQqC,KAArF,iBAIJ,qBAAKQ,IAAKR,EAAQS,SAAUC,IAAI,OAV1BV,EAAQhC,cCuCf2C,MA1Df,WAAgB,IAAD,EACcC,qBAAWrD,EAASL,GADlC,mBACL2D,EADK,KACEN,EADF,KAENtB,EAAU4B,EAAM1D,YAAY4C,KAAI,SAAAC,GAAO,OAAGA,EAAQnC,QAF5C,EAGciD,mBAAS7B,EAAQ,IAH/B,mBAGLL,EAHK,KAGEI,EAHF,KAMN+B,EAAeF,EAAM1D,YAC3BS,QAAO,SAAAoD,GAAO,OAAIA,EAAQnD,OAASe,KA+BrC,OA7BCqC,qBAAU,WACRC,IAAMC,IANK,sCAOVC,MAAK,SAAAC,GACJd,EAAS,CAAC7C,KAAK,gBAAiBC,QAAS0D,EAASC,KAAT,WAE1CC,OAAM,SAAAlE,GACLkD,EAAS,CAAC7C,KAAM,gBACd8D,QAAQC,IAAI,cAEf,IAqBD,cAACpD,EAAD,CAAgBO,MAAO,CACrB2B,WACAT,WArBe,SAAC4B,GAClBA,EAAEC,iBACG/C,IAGL2B,EAAS,CAAC7C,KAAM,cAAgBC,QAASoD,IACzC/B,MAgBEqB,SAba,SAACqB,GAChBA,EAAEE,OAAOtC,MAAMuC,KAAf,UAAyBH,EAAEI,MAAQ,GAAnC,MACAJ,EAAEE,OAAOtC,MAAMyC,IAAf,UAAyBL,EAAEM,MAAQ,GAAnC,OAYEpC,SAVa,SAAC8B,GACdA,EAAEO,kBACFP,EAAEC,kBASFrE,aAAauD,EAAMvD,aACnBF,gBAAiByD,EAAMzD,iBANzB,SAQA,cAACmB,EAAD,CAAsBK,MAAO,CAC3BA,QACAK,UACAD,YAHF,SAKE,cAAC,EAAD,SC/CSkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.a3654c88.chunk.js","sourcesContent":["export const initialState = {\r\n  pokemonPack : [],\r\n  resultsPokemons :[],\r\n  error: '',\r\n  totalResults: 0\r\n}\r\n\r\n\r\nexport function reducer(prevState,action){\r\n   switch(action.type) {\r\n     case 'FETCH_SUCCESS':\r\n        return{\r\n          pokemonPack:action.payload,\r\n          resultsPokemons :[],\r\n          error: '',\r\n          totalResults: 0\r\n         }\r\n      case 'FETCH_ERROR' :\r\n         return{\r\n          pokemonPack:[],\r\n           resultsPokemons :[],\r\n           error: 'Something went wrong'\r\n         }\r\n      case 'ADD_POKEMON': \r\n         return{\r\n           ...prevState,\r\n          pokemonPack: prevState.pokemonPack.filter(pokemonPack => pokemonPack.name !== action.payload[0].name),\r\n          resultsPokemons:[...prevState.resultsPokemons,action.payload[0]],\r\n          error: 'Choose value',\r\n          totalResults: prevState.resultsPokemons.length + 1,\r\n          }\r\n      case 'DELETE_POKEMON': \r\n        return {\r\n          ...prevState,\r\n          pokemonPack: [...prevState.pokemonPack, action.payload],\r\n          resultsPokemons: prevState.resultsPokemons.filter(getPokemon => getPokemon.id !== action.payload.id),\r\n          totalResults: prevState.resultsPokemons.length - 1,\r\n          }\r\n        default:\r\n        return prevState;\r\n     }\r\n   }\r\n\r\n","import React  from \"react\";\r\n\r\nexport const ResultContext =  React.createContext();\r\nexport const AutoCompleteContext = React.createContext();\r\n\r\nexport const ResultProvider = ResultContext.Provider\r\nexport const AutoCompleteProvider =AutoCompleteContext.Provider","import React, { useContext } from 'react'\r\nimport {AutoCompleteContext} from \"./context\"\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nexport default function AutoComplete(){\r\n    const context = useContext(AutoCompleteContext)\r\n    return(\r\n      <Autocomplete\r\n      value={context.value || \"\"}\r\n      onChange={(event, newValue) => {\r\n        context.setValue(newValue);    \r\n      }}\r\n      id=\"custom-input-demo\"\r\n      options={context.options}\r\n      renderInput={(params) => (\r\n        <div ref={params.InputProps.ref}>\r\n          <input style={{ width: 192 }} type=\"text\" {...params.inputProps} />\r\n        </div>\r\n      )}\r\n    />\r\n    )\r\n  }\r\n","import React, { useContext } from 'react'\r\nimport {ResultContext} from \"./context\"\r\nimport AutoComplete from \"./AutoComplete\"\r\n\r\nfunction Results(){\r\nconst context = useContext(ResultContext);\r\n\r\n\r\nreturn(\r\n<div className=\"bg\">\r\n    <div className=\"bg_blacLine\"></div>\r\n    <div className=\"bg_blackCircle\">\r\n        <div className =\"bg_whiteCircle\">\r\n          <div className =\"bg_whiteCircleBlackBorder\"></div>\r\n        </div>\r\n    </div>\r\n    <div className=\"form\" onDragOver={context.dragOver}>\r\n        <h2>Pokemon cards({context.totalResults})</h2>\r\n        <form \r\n            className=\"input-form\"\r\n            onSubmit= {context.addPokemon} \r\n            >\r\n            <AutoComplete/>\r\n            <button  style={{width: 200}}>Add</button>\r\n        </form>\r\n        {context.resultsPokemons.map(pokemon => (\r\n            <div key={pokemon.id}  className=\"pokemonCard\"\r\n                 style={{transform: `rotate(${pokemon.number}deg)`}}\r\n                 draggable=\"true\"\r\n                 onDragEnd={context.dropCard}\r\n            >\r\n                <div className=\"invisible-element\">\r\n                    <div className=\"close\" onClick={()=> context.dispatch({type:'DELETE_POKEMON',payload:pokemon}\r\n                    )}>X\r\n                    </div> \r\n                </div>\r\n                <img src={pokemon.imageUrl} alt=\"\" />\r\n            </div>\r\n            )) }\r\n    </div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Results","import React, {useEffect,useState,useReducer} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport  {reducer,initialState} from \"./components/reducers\"\nimport Results from \"./components/Results\"\nimport {ResultProvider,AutoCompleteProvider} from \"./components/context\"\n\nfunction App() {\n   const [state, dispatch] = useReducer(reducer, initialState)\n   const options = state.pokemonPack.map(pokemon =>pokemon.name);\n   const [value, setValue] = useState(options[0]);\n   const url = \"https://api.pokemontcg.io/v1/cards\"\n\n   const pokemonValue = state.pokemonPack\n  .filter(picture => picture.name === value);\n\n  useEffect(() => {\n    axios.get(url)\n    .then(response =>{\n      dispatch({type:'FETCH_SUCCESS', payload: response.data[\"cards\"] })\n    })\n    .catch(error => {\n      dispatch({type: 'FETCH_ERROR'})\n        console.log(\"error\")\n      })\n  }, []);\n\n  const addPokemon = (e) =>{\n    e.preventDefault();\n    if(! value){\n       return \n    }\n    dispatch({type: 'ADD_POKEMON' , payload: pokemonValue})\n    setValue();\n  }\n\n  const dropCard = (e) =>{\n    e.target.style.left = `${e.pageX - 50}px`;\n    e.target.style.top =  `${e.pageY - 50}px`;\n  }\n  const dragOver = (e) =>{\n      e.stopPropagation();\n      e.preventDefault();\n  }\n\n return (\n    <ResultProvider value={{\n      dispatch,\n      addPokemon,\n      dropCard,\n      dragOver,\n      totalResults:state.totalResults,\n      resultsPokemons: state.resultsPokemons,\n    }}>\n    <AutoCompleteProvider value={{\n      value,\n      options,\n      setValue\n    }}>\n      <Results/>\n      </AutoCompleteProvider>  \n    </ResultProvider>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}